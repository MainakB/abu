export const ASSERTIONMODES = {
  ASSERTTEXTEQUALS: "ASSERTTEXTEQUALS",
  ASSERTTEXTNOTEQUALS: "ASSERTTEXTNOTEQUALS",
  ASSERTVALUEEQUALS: "ASSERTVALUEEQUALS",
  ASSERTVALUENOTEQUALS: "ASSERTVALUENOTEQUALS",
  ASSERTTEXTCONTAINS: "ASSERTTEXTCONTAINS",
  ASSERTVALUECONTAINS: "ASSERTVALUECONTAINS",
  ASSERTTEXTNOTCONTAINS: "ASSERTTEXTNOTCONTAINS",
  ASSERTVALUENOTCONTAINS: "ASSERTVALUENOTCONTAINS",

  ASSERTVISIBILITY: "ASSERTVISIBILITY",
  ASSERTINVISIBILITY: "ASSERTINVISIBILITY",
  // PRSENECE: "presence",
  // NOTPRESENT: "isAbsent",
  ASSERTPRESENCE: "ASSERTPRESENCE",
  ASSERTABSENCE: "ASSERTABSENCE",

  ASSERTATTRIBUTEVALUEEQUALS: "ASSERTATTRIBUTEVALUEEQUALS",
  ASSERTATTRIBUTEVALUENOTEQUALS: "ASSERTATTRIBUTEVALUENOTEQUALS",
  ASSERTATTRIBUTEVALUECONTAINS: "ATTRIBUTEVALUECONTAINS",
  ASSERTATTRIBUTEVALUENOTCONTAINS: "ASSERTATTRIBUTEVALUENOTCONTAINS",

  ASSERTCOOKIEVALUEEQUALS: "ASSERTCOOKIEVALUEEQUALS",
  ASSERTCOOKIEVALUENOTEQUALS: "ASSERTCOOKIEVALUENOTEQUALS",
  ASSERTCOOKIEVALUECONTAINS: "ASSERTCOOKIEVALUECONTAINS",
  ASSERTCOOKIEVALUENOTCONTAINS: "ASSERTCOOKIEVALUENOTCONTAINS",

  CHECKBOXSTATE: "checkBoxState",
  RADIOSTATE: "radioState",

  ASSERTCURRENTURLEQUALS: "ASSERTCURRENTURLEQUALS",
  ASSERTCURRENTURLNOTEQUALS: "ASSERTCURRENTURLNOTEQUALS",
  ASSERTCURRENTURLCONTAINS: "ASSERTCURRENTURLCONTAINS",
  ASSERTCURRENTURLNOTCONTAINS: "ASSERTCURRENTURLNOTCONTAINS",

  ASSERTTEXTINPAGESOURCEEQUALS: "ASSERTTEXTINPAGESOURCEEQUALS",
  ASSERTTEXTINPAGESOURCENOTEQUALS: "ASSERTTEXTINPAGESOURCENOTEQUALS",
  ASSERTTEXTINPAGESOURCECONTAINS: "ASSERTTEXTINPAGESOURCECONTAINS",
  ASSERTTEXTINPAGESOURCENOTCONTAINS: "ASSERTTEXTINPAGESOURCENOTCONTAINS",
  ASSERTTEXTINPDF: "ASSERTTEXTINPDF",
  ASSERTPDFCOMPARISON: "ASSERTPDFCOMPARISON",
  ASSERTTEXTIMAGESINPDF: "ASSERTTEXTIMAGESINPDF",
  ASSERTCPDPDF: "ASSERTCPDPDF",

  DROPDOWNSELECTED: "DROPDOWNSELECTED",
  DROPDOWNNOTSELECTED: "DROPDOWNNOTSELECTED",
  DROPDOWNCOUNTIS: "DROPDOWNCOUNTIS",
  DROPDOWNCOUNTISNOT: "DROPDOWNCOUNTISNOT",
  DROPDOWNCONTAINS: "DROPDOWNCONTAINS",
  DROPDOWNVALUESARE: "DROPDOWNVALUESARE",
  DROPDOWNDUPLICATECOUNT: "DROPDOWNDUPLICATECOUNT",
  DROPDOWNINALPHABETICORDER: "DROPDOWNINALPHABETICORDER",

  NETPAYLOAD: "networkPayload",
  NETREQUEST: "networkRequest",
  ASSERTENABLED: "ASSERTENABLED",
  ASSERTDISABLED: "ASSERTDISABLED",
  ADDCOOKIES: "addCookies",
  DELETECOOKIES: "DELETECOOKIES",
  DELETECOOKIE: "DELETECOOKIE",
  TAKESCREENSHOT: "TAKESCREENSHOT",
  ADDREUSESTEP: "ADDREUSESTEP",
  PAGERELOAD: "pageReload",

  // Variable assignments
  GETTEXT: "GETTEXT",
  MATCHGETTEXTEQUALS: "MATCHGETTEXTEQUALS",
  MATCHGETTEXTNOTEQUALS: "MATCHGETTEXTNOTEQUALS",
  MATCHGETTEXTCONTAINS: "MATCHGETTEXTCONTAINS",
  MATCHGETTEXTNOTCONTAINS: "MATCHGETTEXTNOTCONTAINS",
  MATCHGETTEXTSTARTSWITH: "MATCHGETTEXTSTARTSWITH",
  MATCHGETTEXTNOTSTARTSWITH: "MATCHGETTEXTNOTSTARTSWITH",
  MATCHGETTEXTENDSWITH: "MATCHGETTEXTENDSWITH",
  MATCHGETTEXTNOTENDSWITH: "MATCHGETTEXTNOTENDSWITH",

  GETINNERHTML: "GETINNERHTML",
  MATCHGETINNERHTMLEQUALS: "MATCHGETINNERHTMLEQUALS",
  MATCHGETINNERHTMLNOTEQUALS: "MATCHGETINNERHTMLNOTEQUALS",
  MATCHGETINNERHTMLCONTAINS: "MATCHGETINNERHTMLCONTAINS",
  MATCHGETINNERHTMLNOTCONTAINS: "MATCHGETINNERHTMLNOTCONTAINS",
  MATCHGETINNERHTMLSTARTSWITH: "MATCHGETINNERHTMLSTARTSWITH",
  MATCHGETINNERHTMLNOTSTARTSWITH: "MATCHGETINNERHTMLNOTSTARTSWITH",
  MATCHGETINNERHTMLENDSWITH: "MATCHGETINNERHTMLENDSWITH",
  MATCHGETINNERHTMLNOTENDSWITH: "MATCHGETINNERHTMLNOTENDSWITH",

  GETVALUE: "GETVALUE",
  MATCHGETVALUEEQUALS: "MATCHGETVALUEEQUALS",
  MATCHGETVALUENOTEQUALS: "MATCHGETVALUENOTEQUALS",
  MATCHGETVALUECONTAINS: "MATCHGETVALUECONTAINS",
  MATCHGETVALUENOTCONTAINS: "MATCHGETVALUENOTCONTAINS",
  MATCHGETVALUESTARTSWITH: "MATCHGETVALUESTARTSWITH",
  MATCHGETVALUENOTSTARTSWITH: "MATCHGETVALUENOTSTARTSWITH",
  MATCHGETVALUEENDSWITH: "MATCHGETVALUEENDSWITH",
  MATCHGETVALUENOTENDSWITH: "MATCHGETVALUENOTENDSWITH",

  GETATTRIBUTE: "GETATTRIBUTE",
  GETTOOLTIPTEXT: "GETTOOLTIPTEXT",
  ISCHECKBOXSELECTED: "ISCHECKBOXSELECTED",
  ISCHECKBOXNOTSELECTED: "ISCHECKBOXNOTSELECTED",
  ISRADIOBUTTONSELECTED: "ISRADIOBUTTONSELECTED",
  ISRADIOBUTTONNOTSELECTED: "ISRADIOBUTTONNOTSELECTED",
  GETDROPDOWNSELECTEDOPTION: "GETDROPDOWNSELECTEDOPTION",
  GETDROPDOWNCOUNTWITHTEXT: "GETDROPDOWNCOUNTWITHTEXT",
  GETDROPDOWNCOUNTWITHSUBTEXT: "GETDROPDOWNCOUNTWITHSUBTEXT",
  GETCSS: "GETCSS",
  ISATTRIBUTEEQUALS: "ISATTRIBUTEEQUALS",
  ISATTRIBUTENOTEQUALS: "ISATTRIBUTENOTEQUALS",
  ISATTRIBUTECONTAINS: "ISATTRIBUTECONTAINS",
  ISATTRIBUTENOTCONTAINS: "ISATTRIBUTENOTCONTAINS",
  ISENABLED: "ISENABLED",
  MATCHISENABLEDEQUALS: "MATCHISENABLEDEQUALS",
  MATCHISENABLEDNOTEQUALS: "MATCHISENABLEDNOTEQUALS",
  ISNOTENABLED: "ISNOTENABLED",
  ISPRESENT: "ISPRESENT",
  ISNOTPRESENT: "ISNOTPRESENT",
  MATCHISPRESENTEQUALS: "MATCHISPRESENTEQUALS",
  MATCHISPRESENTNOTEQUALS: "MATCHISPRESENTNOTEQUALS",

  ISELEMENTCLICKABLE: "ISELEMENTCLICKABLE",
  MATCHISELEMENTCLICKABLEEQUALS: "MATCHISELEMENTCLICKABLEEQUALS",
  MATCHISELEMENTCLICKABLENOTEQUALS: "MATCHISELEMENTCLICKABLENOTEQUALS",
  ISELEMENTNOTCLICKABLE: "ISELEMENTNOTCLICKABLE",
  ISDISPLAYED: "ISDISPLAYED",
  MATCHISDISPLAYEDEQUALS: "MATCHISDISPLAYEDEQUALS",
  MATCHISDISPLAYEDNOTEQUALS: "MATCHISDISPLAYEDNOTEQUALS",
  ISNOTDISPLAYED: "ISNOTDISPLAYED",
  SINGLEVARASSIGNDBCONFIG: "SINGLEVARASSIGNDBCONFIG",
  SINGLEVARASSIGNDBQUERY: "SINGLEVARASSIGNDBQUERY",

  GETCOOKIES: "GETCOOKIES",
  GETCOOKIE: "GETCOOKIE",
  GETALERTTEXT: "GETALERTTEXT",

  PAGESOURCECONTAINS: "PAGESOURCECONTAINS",

  GETDBVALUE: "GETDBVALUE",
  GETDBROW: "GETDBROW",
  GETDBROWS: "GETDBROWS",
  RUNDBQUERY: "RUNDBQUERY",

  GETEMAIL: "GETEMAIL",
  DELETEEMAIL: "DELETEEMAIL",
  DELETEALLEMAIL: "DELETEALLEMAIL",
  GETRANDOMEMAIL: "GETRANDOMEMAIL",
  GETERANDOMNUMBERS: "GETERANDOMNUMBERS",

  READFILE: "READFILE",
  GETREQUESTURL: "GETREQUESTURL",
  GETREQUESTURLS: "GETREQUESTURLS",
  ISREQUESTURLPRESENT: "ISREQUESTURLPRESENT",
  ISREQUESTURLNOTPRESENT: "ISREQUESTURLNOTPRESENT",
  GETPAYLOADFROMNETWORKTAB: "GETPAYLOADFROMNETWORKTAB",
  GETCURRENTURL: "GETCURRENTURL",
  ISURLEQUAL: "ISURLEQUAL",
  ISURLNOTEQUAL: "ISURLNOTEQUAL",
  GETPDFTEXT: "GETPDFTEXT",
  GETPDFPAGECOUNT: "GETPDFPAGECOUNT",
  GETPDFPAGEORIENTATION: "GETPDFPAGEORIENTATION",
};

export const ASSERTIONNAMES = {
  ASSERTTEXTINPDF: "assertTextInPdf",
  ASSERTPDFCOMPARISON: "assertPdfComparison",
  ASSERTTEXTIMAGESINPDF: "assertTextImagesInPdf",
  ASSERTCPDPDF: "assertCpdPdf",

  ASSERTTEXTINPAGESOURCENOTEQUALS: "assertTextInPageSourceNotEquals",
  ASSERTTEXTINPAGESOURCECONTAINS: "assertTextInPageSourceContains",
  ASSERTTEXTINPAGESOURCENOTCONTAINS: "assertTextInPageSourceNotContains",

  CHECKBOXCHECKED: "isCheckBoxChecked",
  CHECKBOXNOTCHECKED: "isCheckBoxNotChecked",
  RADIOCHECKED: "isRadioChecked",
  RADIONOTCHECKED: "isRadioNotChecked",

  NETPAYLOAD: "toHaveNetPayload",
  NETREQUEST: "toHaveValue",

  ADDCOOKIES: "addCookies",

  // ASSERTCURRENTURLEQUALS: "assertCurentUrlEquals",
  // ASSERTCURRENTURLCONTAINS: "assertCurentUrlContains",
  // ASSERTCURRENTURLNOTEQUALS: "assertCurentUrlNotEquals",
  // ASSERTCURRENTURLNOTCONTAINS: "assertCurentUrlNotContains",
};

export const FUNCTIONMAPPER = {
  ASSERTCOOKIEVALUEEQUALS: {
    key: ASSERTIONMODES.ASSERTCOOKIEVALUEEQUALS,
    name: "assertCookieValueEquals",
  },
  ASSERTCOOKIEVALUENOTEQUALS: {
    key: ASSERTIONMODES.ASSERTCOOKIEVALUENOTEQUALS,
    name: "assertCookieValueNotEquals",
  },
  ASSERTCOOKIEVALUECONTAINS: {
    key: ASSERTIONMODES.ASSERTCOOKIEVALUECONTAINS,
    name: "assertCookieValueContains",
  },
  ASSERTCOOKIEVALUENOTCONTAINS: {
    key: ASSERTIONMODES.ASSERTCOOKIEVALUENOTCONTAINS,
    name: "assertCookieValueNotContains",
  },

  ASSERTCURRENTURLEQUALS: {
    key: ASSERTIONMODES.ASSERTCURRENTURLEQUALS,
    name: "assertCurentUrlEquals",
  },
  ASSERTCURRENTURLNOTEQUALS: {
    key: ASSERTIONMODES.ASSERTCURRENTURLNOTEQUALS,
    name: "assertCurentUrlNotEquals",
  },
  ASSERTCURRENTURLCONTAINS: {
    key: ASSERTIONMODES.ASSERTCURRENTURLCONTAINS,
    name: "assertCurentUrlContains",
  },
  ASSERTCURRENTURLNOTCONTAINS: {
    key: ASSERTIONMODES.ASSERTCURRENTURLNOTCONTAINS,
    name: "assertCurentUrlNotContains",
  },
  CLICK: { key: "click", name: "click" },
  INPUT: { key: "input", name: "input" },

  ASSERTTEXTEQUALS: {
    key: ASSERTIONMODES.ASSERTTEXTEQUALS,
    name: "elementTextEquals",
  },
  ASSERTTEXTNOTEQUALS: {
    key: ASSERTIONMODES.ASSERTTEXTNOTEQUALS,
    name: "elementTextNotEquals",
  },
  ASSERTVALUEEQUALS: {
    key: ASSERTIONMODES.ASSERTVALUEEQUALS,
    name: "isAttrEquals",
  },
  ASSERTVALUENOTEQUALS: {
    key: ASSERTIONMODES.ASSERTVALUENOTEQUALS,
    name: "isAttrNotEquals",
  },
  ASSERTTEXTCONTAINS: {
    key: ASSERTIONMODES.ASSERTTEXTCONTAINS,
    name: "elementTextContains",
  },
  ASSERTTEXTNOTCONTAINS: {
    key: ASSERTIONMODES.ASSERTTEXTNOTCONTAINS,
    name: "elementTextNotContains",
  },
  ASSERTVALUECONTAINS: {
    key: ASSERTIONMODES.ASSERTVALUECONTAINS,
    name: "assertElementContainsAttributeValue",
  },

  ASSERTVALUENOTCONTAINS: {
    key: ASSERTIONMODES.ASSERTVALUENOTCONTAINS,
    name: "assertElementNotContainsAttributeValue",
  },

  ASSERTATTRIBUTEVALUEEQUALS: {
    key: ASSERTIONMODES.ASSERTATTRIBUTEVALUEEQUALS,
    name: "isAttrEquals",
  },
  ASSERTATTRIBUTEVALUENOTEQUALS: {
    key: ASSERTIONMODES.ASSERTATTRIBUTEVALUENOTEQUALS,
    name: "isAttrNotEquals",
  },
  ASSERTATTRIBUTEVALUECONTAINS: {
    key: ASSERTIONMODES.ASSERTATTRIBUTEVALUECONTAINS,
    name: "assertElementContainsAttributeValue",
  },

  ASSERTATTRIBUTEVALUENOTCONTAINS: {
    key: ASSERTIONMODES.ASSERTATTRIBUTEVALUENOTCONTAINS,
    name: "assertElementNotContainsAttributeValue",
  },
  ASSERTTEXTINPAGESOURCEEQUALS: {
    key: ASSERTIONMODES.ASSERTTEXTINPAGESOURCEEQUALS,
    name: "assertTextInPageSource",
  },
  ASSERTTEXTINPAGESOURCENOTEQUALS: {
    key: ASSERTIONMODES.ASSERTTEXTINPAGESOURCENOTEQUALS,
    name: "assertTextNotInPageSource",
  },
  ASSERTTEXTINPAGESOURCECONTAINS: {
    key: ASSERTIONMODES.ASSERTTEXTINPAGESOURCECONTAINS,
    name: "assertTextInPageSourceContains",
  },
  ASSERTTEXTINPAGESOURCENOTCONTAINS: {
    key: ASSERTIONMODES.ASSERTTEXTINPAGESOURCENOTCONTAINS,
    name: "assertTextInPageSourceNotContains",
  },

  CHECKBOXCHECKED: "isCheckBoxChecked",
  CHECKBOXNOTCHECKED: "isCheckBoxNotChecked",
  RADIOCHECKED: "isRadioChecked",
  RADIONOTCHECKED: "isRadioNotChecked",

  DROPDOWNSELECTED: {
    key: ASSERTIONMODES.DROPDOWNSELECTED,
    name: "assertDropDownSelectedOption",
  },
  DROPDOWNNOTSELECTED: {
    key: ASSERTIONMODES.DROPDOWNNOTSELECTED,
    name: "assertDropDownNotSelectedOption",
  },
  DROPDOWNCOUNTIS: {
    key: ASSERTIONMODES.DROPDOWNCOUNTIS,
    name: "assertDropDownOptionsCount",
  },
  DROPDOWNCOUNTISNOT: {
    key: ASSERTIONMODES.DROPDOWNCOUNTISNOT,
    name: "assertDropDownOptionsCountIsNot",
  },

  DROPDOWNVALUESARE: {
    key: ASSERTIONMODES.DROPDOWNVALUESARE,
    name: "assertDropDownValuesAre",
  },
  DROPDOWNINALPHABETICORDER: {
    key: ASSERTIONMODES.DROPDOWNINALPHABETICORDER,
    name: "assertDropDownInAlphabeticOrder",
  },
  DROPDOWNDUPLICATECOUNT: {
    key: ASSERTIONMODES.DROPDOWNDUPLICATECOUNT,
    name: "assertDropdownDuplicateCount",
  },
  DROPDOWNCONTAINS: {
    key: ASSERTIONMODES.DROPDOWNCONTAINS,
    name: "assertValueInDropDownList",
  },

  NETPAYLOAD: "toHaveNetPayload",
  NETREQUEST: "toHaveValue",
  ASSERTVISIBILITY: {
    key: ASSERTIONMODES.ASSERTVISIBILITY,
    name: "assertElementVisible",
  },
  ASSERTINVISIBILITY: {
    key: ASSERTIONMODES.ASSERTINVISIBILITY,
    name: "assertElementNotVisible",
  },
  ASSERTENABLED: {
    key: ASSERTIONMODES.ASSERTENABLED,
    name: "assertElementEnabled",
  },
  ASSERTDISABLED: {
    key: ASSERTIONMODES.ASSERTDISABLED,
    name: "assertElementNotEnabled",
  },
  // PRSENECE: "isPresent",
  // NOTPRESENT: "isAbsent",
  ASSERTPRESENCE: {
    key: ASSERTIONMODES.ASSERTPRESENCE,
    name: "assertElementPresent",
  },
  ASSERTABSENCE: {
    key: ASSERTIONMODES.ASSERTABSENCE,
    name: "assertElementNotPresent",
  },
  ADDCOOKIES: "addCookies",
  DELETECOOKIES: {
    key: ASSERTIONMODES.DELETECOOKIES,
    name: "clearCookies",
  },
  DELETECOOKIE: {
    key: ASSERTIONMODES.DELETECOOKIE,
    name: "deleteCookie",
  },
  TAKESCREENSHOT: {
    key: ASSERTIONMODES.TAKESCREENSHOT,
    name: "attachScreenshot",
  },
  ADDREUSESTEP: {
    key: ASSERTIONMODES.ADDREUSESTEP,
    name: "use",
  },
  PAGERELOAD: { key: ASSERTIONMODES.PAGERELOAD, name: "refresh page" },
  NAVIGATE: { key: "navigate", name: "url" },
  SWITCHTOWINDOW: { key: "switchToWindow", name: "switchWindow" },
  SWITCHFRAME: { key: "switchFrame", name: "switchFrame" },
  SWITCHTODEFAULTFRAME: { key: "switchToDefaultFrame", name: "switchFrame" },
  GETATTRIBUTE: {
    key: ASSERTIONMODES.GETATTRIBUTE,
    name: "attribute",
  },
  ISATTRIBUTEEQUALS: {
    key: ASSERTIONMODES.ISATTRIBUTEEQUALS,
    name: "isAttributeEquals",
  },
  ISATTRIBUTENOTEQUALS: {
    key: ASSERTIONMODES.ISATTRIBUTENOTEQUALS,
    name: "isAttributeNotEquals",
  },
  ISATTRIBUTECONTAINS: {
    key: ASSERTIONMODES.ISATTRIBUTECONTAINS,
    name: "isAttributeContains",
  },
  ISATTRIBUTENOTCONTAINS: {
    key: ASSERTIONMODES.ISATTRIBUTENOTCONTAINS,
    name: "isAttributeNotContains",
  },

  ISENABLED: {
    key: ASSERTIONMODES.ISENABLED,
    name: "isEnabled",
  },
  ISNOTENABLED: {
    key: ASSERTIONMODES.ISNOTENABLED,
    name: "isDisabled",
  },
  ISPRESENT: {
    key: ASSERTIONMODES.ISPRESENT,
    name: "isPresent",
  },
  ISNOTPRESENT: {
    key: ASSERTIONMODES.ISNOTPRESENT,
    name: "isAbsent",
  },
  ISELEMENTCLICKABLE: {
    key: ASSERTIONMODES.ISELEMENTCLICKABLE,
    name: "isElementClickable",
  },
  ISELEMENTNOTCLICKABLE: {
    key: ASSERTIONMODES.ISELEMENTNOTCLICKABLE,
    name: "isElementNotClickable",
  },
  ISDISPLAYED: {
    key: ASSERTIONMODES.ISDISPLAYED,
    name: "isDisplayed",
  },
  ISNOTDISPLAYED: {
    key: ASSERTIONMODES.ISNOTDISPLAYED,
    name: "isNotDisplayed",
  },
  GETTEXT: {
    key: ASSERTIONMODES.GETTEXT,
    name: "text",
  },
  GETVALUE: {
    key: ASSERTIONMODES.GETVALUE,
    name: "attribute",
  },
  GETINNERHTML: {
    key: ASSERTIONMODES.GETINNERHTML,
    name: "getInnerHtml",
  },

  ISCHECKBOXSELECTED: {
    key: ASSERTIONMODES.ISCHECKBOXSELECTED,
    name: "isCheckboxSelected",
  },
  ISCHECKBOXNOTSELECTED: {
    key: ASSERTIONMODES.ISCHECKBOXNOTSELECTED,
    name: "isCheckboxNotSelected",
  },
  ISRADIOBUTTONSELECTED: {
    key: ASSERTIONMODES.ISRADIOBUTTONSELECTED,
    name: "isRadioSelected",
  },
  ISRADIOBUTTONNOTSELECTED: {
    key: ASSERTIONMODES.ISRADIOBUTTONNOTSELECTED,
    name: "isRadioNotSelected",
  },

  GETDROPDOWNSELECTEDOPTION: {
    key: ASSERTIONMODES.GETDROPDOWNSELECTEDOPTION,
    name: "getDropdownSelectedOption",
  },
  GETDROPDOWNCOUNTWITHTEXT: {
    key: ASSERTIONMODES.GETDROPDOWNCOUNTWITHTEXT,
    name: "getDropdownCountWithText",
  },
  GETDROPDOWNCOUNTWITHSUBTEXT: {
    key: ASSERTIONMODES.GETDROPDOWNCOUNTWITHSUBTEXT,
    name: "getSubTextInDropdownCount",
  },
  ASSERTPDFCOMPARISON: {
    key: ASSERTIONMODES.ASSERTPDFCOMPARISON,
    name: "assertPdfComparison",
  },
  ASSERTTEXTIMAGESINPDF: {
    key: ASSERTIONMODES.ASSERTTEXTIMAGESINPDF,
    name: "assertTextImagesInPdf",
  },
  ASSERTCPDPDF: {
    key: ASSERTIONMODES.ASSERTCPDPDF,
    name: "assertCPDPdf",
  },
  ASSERTTEXTINPDF: {
    key: ASSERTIONMODES.ASSERTTEXTINPDF,
    name: "assertTextContentOnPdf",
  },

  GETDBVALUE: {
    key: ASSERTIONMODES.GETDBVALUE,
    name: "readDbValue",
  },
  GETDBROW: {
    key: ASSERTIONMODES.GETDBROW,
    name: "readDbRow",
  },
  GETDBROWS: {
    key: ASSERTIONMODES.GETDBROWS,
    name: "readDbRows",
  },
  RUNDBQUERY: {
    key: ASSERTIONMODES.RUNDBQUERY,
    name: "runQuery",
  },

  SINGLEVARASSIGNDBCONFIG: {
    key: ASSERTIONMODES.SINGLEVARASSIGNDBCONFIG,
    name: "PLACEHOLDER",
  },
  SINGLEVARASSIGNDBQUERY: {
    key: ASSERTIONMODES.SINGLEVARASSIGNDBQUERY,
    name: "PLACEHOLDER",
  },
  MATCHISENABLEDEQUALS: {
    key: ASSERTIONMODES.MATCHISENABLEDEQUALS,
    name: "isEnabled",
  },
  MATCHISENABLEDNOTEQUALS: {
    key: ASSERTIONMODES.MATCHISENABLEDNOTEQUALS,
    name: "isEnabled",
  },
  MATCHISPRESENTEQUALS: {
    key: ASSERTIONMODES.MATCHISPRESENTEQUALS,
    name: "isPresent",
  },
  MATCHISPRESENTNOTEQUALS: {
    key: ASSERTIONMODES.MATCHISPRESENTNOTEQUALS,
    name: "isPresent",
  },

  MATCHISELEMENTCLICKABLEEQUALS: {
    key: ASSERTIONMODES.MATCHISELEMENTCLICKABLEEQUALS,
    name: "isElementClickable",
  },
  MATCHISELEMENTCLICKABLENOTEQUALS: {
    key: ASSERTIONMODES.MATCHISELEMENTCLICKABLENOTEQUALS,
    name: "isElementClickable",
  },
  MATCHISDISPLAYEDEQUALS: {
    key: ASSERTIONMODES.MATCHISDISPLAYEDEQUALS,
    name: "isDisplayed",
  },
  MATCHISDISPLAYEDNOTEQUALS: {
    key: ASSERTIONMODES.MATCHISDISPLAYEDNOTEQUALS,
    name: "isDisplayed",
  },

  MATCHGETTEXTEQUALS: {
    key: ASSERTIONMODES.MATCHGETTEXTEQUALS,
    name: "text",
  },
  MATCHGETTEXTNOTEQUALS: {
    key: ASSERTIONMODES.MATCHGETTEXTNOTEQUALS,
    name: "text",
  },
  MATCHGETTEXTCONTAINS: {
    key: ASSERTIONMODES.MATCHGETTEXTCONTAINS,
    name: "text",
  },
  MATCHGETTEXTNOTCONTAINS: {
    key: ASSERTIONMODES.MATCHGETTEXTNOTCONTAINS,
    name: "text",
  },

  MATCHGETTEXTSTARTSWITH: {
    key: ASSERTIONMODES.MATCHGETTEXTSTARTSWITH,
    name: "text",
  },
  MATCHGETTEXTNOTSTARTSWITH: {
    key: ASSERTIONMODES.MATCHGETTEXTNOTSTARTSWITH,
    name: "text",
  },
  MATCHGETTEXTENDSWITH: {
    key: ASSERTIONMODES.MATCHGETTEXTENDSWITH,
    name: "text",
  },
  MATCHGETTEXTNOTENDSWITH: {
    key: ASSERTIONMODES.MATCHGETTEXTNOTENDSWITH,
    name: "text",
  },

  MATCHGETVALUEEQUALS: {
    key: ASSERTIONMODES.MATCHGETVALUEEQUALS,
    name: "attribute",
  },
  MATCHGETVALUENOTEQUALS: {
    key: ASSERTIONMODES.MATCHGETVALUENOTEQUALS,
    name: "attribute",
  },
  MATCHGETVALUECONTAINS: {
    key: ASSERTIONMODES.MATCHGETVALUECONTAINS,
    name: "attribute",
  },
  MATCHGETVALUENOTCONTAINS: {
    key: ASSERTIONMODES.MATCHGETVALUENOTCONTAINS,
    name: "attribute",
  },
  MATCHGETVALUESTARTSWITH: {
    key: ASSERTIONMODES.MATCHGETVALUESTARTSWITH,
    name: "attribute",
  },
  MATCHGETVALUENOTSTARTSWITH: {
    key: ASSERTIONMODES.MATCHGETVALUENOTSTARTSWITH,
    name: "attribute",
  },
  MATCHGETVALUEENDSWITH: {
    key: ASSERTIONMODES.MATCHGETVALUEENDSWITH,
    name: "attribute",
  },
  MATCHGETVALUENOTENDSWITH: {
    key: ASSERTIONMODES.MATCHGETVALUENOTENDSWITH,
    name: "attribute",
  },

  MATCHGETINNERHTMLEQUALS: {
    key: ASSERTIONMODES.MATCHGETINNERHTMLEQUALS,
    name: "getInnerHtml",
  },
  MATCHGETINNERHTMLNOTEQUALS: {
    key: ASSERTIONMODES.MATCHGETINNERHTMLNOTEQUALS,
    name: "getInnerHtml",
  },
  MATCHGETINNERHTMLCONTAINS: {
    key: ASSERTIONMODES.MATCHGETINNERHTMLCONTAINS,
    name: "getInnerHtml",
  },
  MATCHGETINNERHTMLNOTCONTAINS: {
    key: ASSERTIONMODES.MATCHGETINNERHTMLNOTCONTAINS,
    name: "getInnerHtml",
  },
  MATCHGETINNERHTMLSTARTSWITH: {
    key: ASSERTIONMODES.MATCHGETINNERHTMLSTARTSWITH,
    name: "getInnerHtml",
  },
  MATCHGETINNERHTMLNOTSTARTSWITH: {
    key: ASSERTIONMODES.MATCHGETINNERHTMLNOTSTARTSWITH,
    name: "getInnerHtml",
  },
  MATCHGETINNERHTMLENDSWITH: {
    key: ASSERTIONMODES.MATCHGETINNERHTMLENDSWITH,
    name: "getInnerHtml",
  },
  MATCHGETINNERHTMLNOTENDSWITH: {
    key: ASSERTIONMODES.MATCHGETINNERHTMLNOTENDSWITH,
    name: "getInnerHtml",
  },

  ASSERTCURRENTURLEQUALS: {
    key: ASSERTIONMODES.ASSERTCURRENTURLEQUALS,
    name: "assertCurrentUrl",
  },
  ASSERTCURRENTURLNOTEQUALS: {
    key: ASSERTIONMODES.ASSERTCURRENTURLNOTEQUALS,
    name: "assertCurrentUrlNotEquals",
  },
  ASSERTCURRENTURLCONTAINS: {
    key: ASSERTIONMODES.ASSERTCURRENTURLCONTAINS,
    name: "assertCurrentUrlContains",
  },
  ASSERTCURRENTURLNOTCONTAINS: {
    key: ASSERTIONMODES.ASSERTCURRENTURLNOTCONTAINS,
    name: "assertCurrentUrlNotContains",
  },
};
